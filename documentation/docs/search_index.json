[
["index.html", "RoboCar project documentation Chapter 1 Project RoboCar", " RoboCar project documentation Uwe Sterr 2018-10-30 Chapter 1 Project RoboCar We want to build autonomous driving model cars which can master a course without any human intervention The project was started during one of those cold dark winter evenings on 8th of February 2018 by Elias, who carried this idea with him for quite some time already Andreas, who as far as I can tell is interested in just about everything Finn, who probably never thought about this idea before that day but was immediately enthusiastic Uwe, who was infected with the idea by Elias in autumn 2017 We decided then and there to build autonomous robotic cars probably with Raspberry Pi, but open for all possible concepts. We organize our meetings via the meetup group https://www.meetup.com/Esslingen-Makerspace/, you are welcome to join in, register as a member of that meetup group and you will receive invitations to our meetings. This documentation shall act as an archive for Resources Experiences gathered Theory Minutes of meeting For inspiration you can check the it:movES http://www.hs-esslingen.de/de/hochschule/fakultaeten/informationstechnik/aktuelles/einzelansicht/datum/2018/02/artikel/carolo-cup-2018-itmoves-belegt-vorderen-platz.html &lt; "],
["resources.html", "Chapter 2 Resources 2.1 Meetups 2.2 RoboCar projects 2.3 Hardware 2.4 Simulators 2.5 Software", " Chapter 2 Resources In this section interesting resources for different topics are listed 2.1 Meetups 2.1.1 Esslinger Makerspace Projekt: Autonomen RoboCar bauen https://www.meetup.com/Esslingen-Makerspace/ Ob ihr euer eigenes RoboCar entwickeln wollt, oder lieber ein kleines Team bilden wollt, hier seit ihr richtig. 2.1.2 Autonomous Mobility Berlin https://www.meetup.com/autonomous-mobility-berlin/ This is a group for anyone interested and intrigued by Autonomous Mobility, Self-Driving Cars (SDC). Robots. We will cover topics on related technologies - Computer Vision, Deep Learning, Reinforcement learning, evolutionary computation, Sensor Fusion, ROS etc.. 2.2 RoboCar projects 2.2.1 DIY RoboCars https://diyrobocars.com/about/ This is the sister site to DIY Drones and resource/community companion to the DIY Robocars Meetup Group. Created by Chris Anderson of 3DR. 2.2.2 Donkey car http://www.donkeycar.com An opensource DIY self driving platform for small scale cars. RC CAR + Raspberry Pi + Python (tornado, keras, tensorflow, opencv, ….) The documentation of the project includes: Assemble hardware. Install software. Calibrate your car. Start driving. Train an autopilot. Experiment with simulator The code can be found at github 2.2.3 Sunfounder Smart Video Car Kit for Raspberry Pi with Android App https://www.sunfounder.com/robotic-drone/smartcar/smart-video-car-kit/rpi-car.html This is a complete learning kit based on Raspberry Pi with Android App. For better learning, an elaborately-written user manual, code with explanation and thorough schematic diagrams are provided. Available at amazon Sunfounder software is found at github Documentation can be found at https://www.sunfounder.com/learn/category/Smart-Video-Car-V2-0-for-Raspberry-Pi-Pi-Car-V.html 2.2.4 Kuman Professional WIFI Smart Robot Model Car Kit Videokamera for Raspberry Pi 3 Einfache Montage und Bedienung: Das ist ein komplettes WIFI-Lern-Smart-Roboter-Kit mit 8GB-Karte basierend auf Raspberry Pi 3 Controlled by ISO Android App. Für den Betrieb leicht, Code of smart Robot System sind in 8 GB Karte vorinstalliert. Für ein besseres Lernen, eine ausführliche schriftliche Benutzerhandbuch, Code mit Erklärung und schematische Diagramme werden von kuman zur Verfügung gestellt. Available at amazon 2.3 Hardware In this section hardware related information is presented 2.3.1 KOMPONENTENLISTE FÜR EIN FERNGESTEUERTES ROBOTER AUTO https://custom-build-robots.com/raspberry-pi-roboter-auto-komponenten Ingmar Stapel from Munich keeps this list up to date ROBOTER AUTO GEHIRN – RASPBERRY PI 3 MODEL B RASPBERRY PI – KAMERAS IM ÜBERBLICK MOTORTREIBER L298N H-BRÜCKE STEP-DOWN CONVERTER (MEINE EMPFEHLUNG) MOTOREN 2.3.2 Motor control How to control steer and throttle 2.3.2.1 PCA9685 2.3.2.1.1 16-KANAL PCA9685 SERVO KONTROLLER – TEIL 1 EINFÜHRUNG UND AUFBAU https://custom-build-robots.com/raspberry-pi-elektronik/16-kanal-pca9685-servo-kontroller-i2c-schnittstelle-einfuehrung-aufbau/8040 16 channels From Adafruit Connect to Raspberry via I2C 3.3V supply For motor control together with L298N H-bridge Table 2.1: Wiring PCA9685 Raspberry Pi Raspberry_Pi Servo_Driver Pin 1 (3,3 V) VCC Pin 6 (GND) GND GPIO 2 (SDA) SDA GPIO 3 (SCL) SCL 2.3.2.1.2 Adafruit 16 Channel Servo Driver with Raspberry Pi https://learn.adafruit.com/adafruit-16-channel-servo-driver-with-raspberry-pi/overview Good explanation with link to github code and wiring example 2.3.2.2 Wii sensor Could use wii sensor instead of camera 2.4 Simulators 2.4.1 Donkey Simulator http://docs.donkeycar.com/guide/simulator/ Experiment with training a donkey car to drive in simulation. This simulator is built on the the Unity game platform, uses their internal physics and graphics, and connects to a donkey Python process to use our trained model to control the simulated Donkey. 2.5 Software 2.5.1 Udacitiy open source SDC https://github.com/udacity/self-driving-car At Udacity, we believe in democratizing education. How can we provide opportunity to everyone on the planet? We also believe in teaching really amazing and useful subject matter. When we decided to build the Self-Driving Car Nanodegree program, to teach the world to build autonomous vehicles, we instantly knew we had to tackle our own self-driving car too. Together with Google Self-Driving Car founder and Udacity President Sebastian Thrun, we formed our core Self-Driving Car Team. One of the first decisions we made? Open source code, written by hundreds of students from across the globe! 2.5.2 connect raspberry with xbox controller good tutorial with example code https://tutorials-raspberrypi.de/raspberry-pi-xbox-360-controller-steuern/ you find a code example import RPi.GPIO as GPIO import math import xbox GPIO_LED_GREEN = 23 GPIO_LED_RED = 22 GPIO_LED_YELLOW = 27 GPIO_LED_BLUE = 17 GPIO_SERVO_PIN = 25 GPIO.setmode(GPIO.BCM) GPIO.setwarnings(False) GPIO.setup(GPIO_LED_GREEN, GPIO.OUT) GPIO.setup(GPIO_LED_RED, GPIO.OUT) GPIO.setup(GPIO_LED_YELLOW, GPIO.OUT) GPIO.setup(GPIO_LED_BLUE, GPIO.OUT) GPIO.setup(GPIO_SERVO_PIN, GPIO.OUT) def updateServo(pwm, angle): duty = float(angle) / 10.0 + 2.5 pwm.ChangeDutyCycle(duty) def angleFromCoords(x,y): angle = 0.0 if x==0.0 and y==0.0: angle = 90.0 elif x&gt;=0.0 and y&gt;=0.0: # first quadrant angle = math.degrees(math.atan(y/x)) if x!=0.0 else 90.0 elif x&lt;0.0 and y&gt;=0.0: # second quadrant angle = math.degrees(math.atan(y/x)) angle += 180.0 elif x&lt;0.0 and y&lt;0.0: # third quadrant angle = math.degrees(math.atan(y/x)) angle += 180.0 elif x&gt;=0.0 and y&lt;0.0: # third quadrant angle = math.degrees(math.atan(y/x)) if x!=0.0 else -90.0 angle += 360.0 return angle if __name__ == &#39;__main__&#39;: joy = xbox.Joystick() pwm = GPIO.PWM(GPIO_SERVO_PIN, 100) pwm.start(5) while not joy.Back(): # LEDs led_state_green = GPIO.HIGH if joy.A() else GPIO.LOW led_state_red = GPIO.HIGH if joy.B() else GPIO.LOW led_state_yellow = GPIO.HIGH if joy.Y() else GPIO.LOW led_state_blue = GPIO.HIGH if joy.X() else GPIO.LOW GPIO.output(GPIO_LED_GREEN, led_state_green) GPIO.output(GPIO_LED_RED, led_state_red) GPIO.output(GPIO_LED_YELLOW, led_state_yellow) GPIO.output(GPIO_LED_BLUE, led_state_blue) # Servo x, y = joy.leftStick() angle = angleFromCoords(x,y) if angle &gt; 180 and angle &lt; 270: angle = 180 elif angle &gt;= 270: angle = 0 updateServo(pwm, angle) joy.close() pwm.stop() 2.5.3 RASPBERRY PI RC CONTROL http://www.instructables.com/id/Raspberry-Pi-RC-Control/ 2.5.4 Python class to support xbox 360 controller under Linux on RaspberryPi Python class to support reading xbox 360 wired and wireless controller input under Linux. Makes it easy to get real-time input from controller buttons, analog sticks and triggers. Built and tested on RaspberryPi running Raspbian. code example import xbox joy = xbox.Joystick() #Initialize joystick if joy.A(): #Test state of the A button (1=pressed, 0=not pressed) print &#39;A button pressed&#39; x_axis = joy.leftX() #X-axis of the left stick (values -1.0 to 1.0) (x,y) = joy.leftStick() #Returns tuple containing left X and Y axes (values -1.0 to 1.0) trigger = joy.rightTrigger() #Right trigger position (values 0 to 1.0) joy.close() #Cleanup before exit https://github.com/FRC4564/Xbox 2.5.5 xbox driver for mac https://github.com/360Controller/360Controller/releases 2.5.6 Konzept für softwareschichten Die Softwareschichten sollen es ermöglichen das teile der software zwischen den bastlern ausgetauscht werden können bzw. unabhängig voneinander entwickelt werden können Arduino comm schicht actor schicht input geschwindigkeit cm/s resolution TBD lenkwinkel grad resolution 0.1 degree sensor schicht ultraschall Raspi comm schicht actor schicht arduino USB seriell oder I2C auf PCA wlan/USB für den controller TCP/IP wlan für streaming des videos SAMBA zum auslesen des USB sticks sensor schicht kamera neuronales netz/ oder läuft auf PC USB stick für trainingsdatenaufzeichnung output geschwindigkeit cm/s resolution TBD lenkwinkel grad resolution 0.1 degree input über WLAN vom Laptop geschwindigkeit cm/s resolution TBD lenkwinkel grad resolution 0.1 degree Laptop comm schicht controller USB stick auslesen verbindung zum Raspberry data pre-processing sensor data camera data downsampling color scheme neuronales netz training output geschwindigkeit cm/s resolution TBD lenkwinkel grad resolution 0.1 degree TBC "],
["experiences.html", "Chapter 3 Experiences gathered 3.1 Install donkey car on Mac 3.2 Donkey car simulator", " Chapter 3 Experiences gathered Here I will write down how the adventure goes 3.1 Install donkey car on Mac http://docs.donkeycar.com/guide/install_software/#install-donkeycar-on-mac Installation went without problem. Note: After closing the Terminal, when you open it again, you will need to type source activate donkey to re-enable the mappings to donkey specific Python libraries 3.2 Donkey car simulator http://docs.donkeycar.com/guide/simulator/ Typical Use Start simulator Double check that log dir exists and is empty Start scene of your choice Hit Auto Drive w Rec button Vary the Max Speed, Prop, and Diff sliders to obtain a variety of driving styles Wait 10-15 minutes until you have recorded 10K+ frames of data. Hit the Stop button Hit the Exit button Move the log dir to the ~/d2/data/ dir where you normally put tub data. - This will create a ~/d2/data/log path. Train as usual. "],
["Theory.html", "Chapter 4 Theory 4.1 Wiring of PCA9685 with L298N H-bridge 4.2 sensor fusion of LIDAR and camera data", " Chapter 4 Theory This section is a collection of theory and concepts 4.1 Wiring of PCA9685 with L298N H-bridge Since the raspberry pi PWM signal is not very stable the I2C interface is used to connect to to the servo driver PCA9685. If a higher voltage is needed the motor driver L298N H-bridge can be utilized. Each H-Bridge requires two additional signals: turn motor CW turn motor CCW no signal =&gt; motor brakes https://www.npmjs.com/package/node-red-contrib-pca9685 4.2 sensor fusion of LIDAR and camera data Paper by Varuna De Silva, Jamie Roche, and Ahmet Kondoz, Senior Member, IEEE Fusion of LiDAR and Camera Sensor Data for Environment Sensing in Driverless Vehicles This paper addresses the problem of fusing the outputs of a LiDAR scanner and a wide-angle monocular image sensor. The first part of the proposed framework spatially aligns the two sensor data streams with a geometric model. The resolutions of the two sensors are quite different, with the image sensor having a much denser spatial resolution. https://arxiv.org/pdf/1710.06230.pdf "],
["robocarLogBook.html", "Chapter 5 RoboCar Logbook 5.1 15-02-2018 5.2 Build sunfounder car 17-02-2018 5.3 Viewing a list of available Python versions 5.4 Run calibration 5.5 MJPG-streamer Installation", " Chapter 5 RoboCar Logbook The logbook shall be the place to log activities so that future me will understand what present me was doing and maybe even why. 5.1 15-02-2018 Already installed donkey software on mac at /Users/uwesterr/miniconda3/envs/donkey according to http://docs.donkeycar.com/guide/install_software/#install-donkeycar-on-mac 5.1.1 donkey findcar the command donkey findcar leads to sudo: nmap: command not found therefore nmap shall be installed using sudo apt install nmap this leads to error message Unable to locate an executable at &quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home/bin/apt&quot; (-1) 5.2 Build sunfounder car 17-02-2018 took about 4h, very good instructions at https://www.sunfounder.com/learn/download/U21hcnRfVmlkZW9fQ2FyX2Zvcl9SYXNwYmVycnlfUGkucGRm/dispi 5.2.1 install software 18-02-2018 download RASPBIAN STRETCH LITE from https://www.raspberrypi.org/downloads/raspbian/ use Etcher to flash SD card for raspi and put SD card in adapter to put into card reader of mac book Create a blank file ssh under the /boot directory to enable remote login and delete the suffix in the file name. Create a WiFi configuration file wpa_supplicant.conf under /boot according to http://www.linux-ratgeber.de/wlan-verbindungsdaten-einrichten-ueber-die-wpa_supplicant-conf/ ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 network={ ssid=“WLAN-NAME_1” psk=“WLAN-SCHLUESSEL_1” proto=RSN scan_ssid=1 key_mgmt=WPA-PSK pairwise=CCPM group=TKIP } 5.2.1.1 boot up raspi username: pi password: raspberry change password type passwd and follow instructions change to german keyboard layout sudo nano /etc/default/keyboard find where it says XKBLAYOUT=”gb” to XKBLAYOUT=”de” and change the gb to the two letter code for german pipe symbol | =&gt; alt option + &lt; Get Source Code sudo apt-get install git git clone https://github.com/sunfounder/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi.git Install python-dev, python-smbus sudo apt-get update sudo apt-get upgrade sudo apt-get install python-dev sudo apt-get install python-smbus Setup I2C Port sudo raspi-config could not get wlan to work install now RASPBIAN STRETCH WITH DESKTOP instead RASPBIAN STRETCH LITE hostnam uwesCar do the follwoing steps again Get Source Code sudo apt-get install git git clone https://github.com/sunfounder/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi.git Install python-dev, python-smbus sudo apt-get update sudo apt-get upgrade sudo apt-get install python-dev sudo apt-get install python-smbus Setup I2C Port done this time in pixel desktop Start calibration cd ~/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/server sudo python cali_server.py set wlan sudo nano /etc/wpa_supplicant/wpa_supplicant.conf sudo nano /etc/wpa_supplicant/wpa_supplicant.conf Run cali_client cali_client.py is written in python2, i got python 3 installed changed cali_client.py added parenthesis for print statements Python 3 calls it tkinter not Tkinter. run sudo python cali_client.py leads to Exception in Tkinter callback Traceback (most recent call last): File &quot;/Users/uwesterr/miniconda3/lib/python3.6/tkinter/__init__.py&quot;, line 1699, in __call__ return self.func(*args) File &quot;cali_client.py&quot;, line 56, in left_reverse tcpCliSock.send(left_cmd) TypeError: a bytes-like object is required, not &#39;str&#39; therefore build an environment with python 2 conda create --name sunfounder gives Package plan for installation in environment /Users/uwesterr/miniconda3/envs/sunfounder: To activate this environment, use: &gt; source activate sunfounder To deactivate an active environment, use: &gt; source deactivate python –version Python 3.6.0 :: Continuum Analytics, Inc. 5.3 Viewing a list of available Python versions To list the versions of Python that are available to install, in your Terminal window or an Anaconda Prompt, run: conda search python This lists all packages whose names contain the text python. To list only the packages whose full name is exactly python, add the –full-name option. In your Terminal window or an Anaconda Prompt, run: conda search --full-name python conda search –full-name python build environment with python 2.7 conda create -n sunfounderPy27 python=2.7 anaconda To activate this environment, use: source activate sunfounderPy27 To deactivate an active environment, use: source deactivate Uwes-MBP:~ uwesterr$ source activate sunfounderPy27 (sunfounderPy27) Uwes-MBP:~ uwesterr$ python –version Python 2.7.13 :: Anaconda 4.4.0 (x86_64) raspberry ip 192.168.178.67 5.4 Run calibration on raspbeery cd ~/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/server sudo python cali_server.py on mac source activate sunfounderPy27 cd /Users/uwesterr/CloudProjectsUnderWork/ProjectsUnderWork/RoboCar/sunfounder/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/client sudo python cali_client.py 5.5 MJPG-streamer Installation Installation Plug the USB camera into Raspberry Pi, and run the command lsusb. The GEMBIRD represents the USB camera; since it is printed on the screen, it indicates the system has recognized the camera. lsusb resutls in Bus 001 Device 004: ID 1908:2310 GEMBIRD Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. SMSC9512/9514 Fast Ethernet Adapter Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp. Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Check whether the driver for the camera works normally: ls /dev/vid* ls /dev/vid* results in /dev/video0 install the following software sudo apt-get install subversion sudo apt-get install libv4l-dev sudo apt-get install libjpeg8-dev sudo apt-get install imagemagick Compile the source code of MJPG-streamer: cd /home/pi/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/mjpg-streamer/mjpg-streamer sudo make USE_LIBV4L2=true clean all Install: sudo make DESTDIR=/usr install 5.5.1 Testing Operation on Raspberry Pi Run the program: sudo sh start.sh on Mac Type in the following address at the address bar of your browser (Firefox is recommended): http://192.168.178.67:8080/stream.html "],
["get-on-the-road.html", "Chapter 6 Get on the Road! 6.1 Install Xbox 360 controller 6.2 Implement Xbox controller as input in client_App.py 6.3 Get IP adress of raspi 6.4 Store snapshots of video stream on local computer", " Chapter 6 Get on the Road! Use two terminals for raspberry first teminal run jgp streamer cd /home/pi/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/mjpg-streamer/mjpg-streamer sudo sh start.sh second terminal run tcp_server.py: cd ~/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/server sudo python tcp_server.py on mac terminal in environment sunfounderPy27 Type in the following address at the address bar of your browser (Firefox is recommended): http://192.168.178.67:8080/stream.html source activate sunfounderPy27 or if openCV is needed source activate carnd-term1 cd /Users/uwesterr/CloudProjectsUnderWork/ProjectsUnderWork/RoboCar/sunfounder/Sunfounder_Smart_Video_Car_Kit_for_RaspberryPi/client sudo python client_App.py 6.1 Install Xbox 360 controller install Xbox 360 controller drive on mac https://github.com/360Controller/360Controller/releases NOTE!!! it seems necessary to have the controller plugged into the USB port during boot up According to http://www.philipzucker.com/python-xbox-controller-mac/ Install pygame python -m pip install -U pygame --user create a jupyter notebook “xboxControllerOnMac.ipynb”&quot; with import pygame import sys import time import socket import cPickle as pickle UDP_IP = &quot;127.0.0.1&quot; UDP_PORT = 5005 MESSAGE = &quot;Hello, World!&quot; print &quot;UDP target IP:&quot;, UDP_IP print &quot;UDP target port:&quot;, UDP_PORT print &quot;message:&quot;, MESSAGE sock = socket.socket(socket.AF_INET, # Internet socket.SOCK_DGRAM) # UDP pygame.init() pygame.joystick.init() clock = pygame.time.Clock() print pygame.joystick.get_count() _joystick = pygame.joystick.Joystick(0) _joystick.init() gives: UDP target IP: 127.0.0.1 UDP target port: 5005 message: Hello, World! 1 watch out for the “1” which indicates that the controller was identified while 1: for event in pygame.event.get(): if event.type == pygame.JOYBUTTONDOWN: print(&quot;Joystick button pressed.&quot;) print event if event.type == pygame.JOYAXISMOTION: #print _joystick.get_axis(0) #print event if event.axis == 0: # this is the x axis print event.value if event.axis == 5: # right trigger print event.value xdir = _joystick.get_axis(0) rtrigger = _joystick.get_axis(5) #deadzone if abs(xdir) &lt; 0.2: xdir = 0.0 if rtrigger &lt; -0.9: rtrigger = -1.0 MESSAGE = pickle.dumps([xdir,rtrigger]) sock.sendto(MESSAGE, (UDP_IP, UDP_PORT)) clock.tick(30) when using controller the following output was created 0.00781273842586 -1.00003051851 Joystick button pressed. 0.0 0.00781273842586 Joystick button pressed. 0.0312509537034 6.2 Implement Xbox controller as input in client_App.py In client_App.py the part for driving forward extracted from Tkinter import * from socket import * # Import necessary modules ctrl_cmd = [&#39;forward&#39;, &#39;backward&#39;, &#39;left&#39;, &#39;right&#39;, &#39;stop&#39;, &#39;read cpu_temp&#39;, &#39;home&#39;, &#39;distance&#39;, &#39;x+&#39;, &#39;x-&#39;, &#39;y+&#39;, &#39;y-&#39;, &#39;xy_home&#39;] top = Tk() # Create a top window top.title(&#39;Sunfounder Raspberry Pi Smart Video Car&#39;) HOST = &#39;192.168.178.67&#39; # Server(Raspberry Pi) IP address PORT = 21567 BUFSIZ = 1024 # buffer size ADDR = (HOST, PORT) tcpCliSock = socket(AF_INET, SOCK_STREAM) # Create a socket tcpCliSock.connect(ADDR) # Connect with the server # ============================================================================= # The function is to send the command forward to the server, so as to make the # car move forward. # ============================================================================= def forward_fun(event): print &#39;forward&#39; tcpCliSock.send(&#39;forward&#39;) then keystrokes are binded to the forward function, this needs to be changed to bind Xbox controller values to the function # ============================================================================= # Bind buttons on the keyboard with the corresponding callback function to # control the car remotely with the keyboard. # ============================================================================= top.bind(&#39;&lt;KeyPress-w&gt;&#39;, forward_fun) # Press down key &#39;w&#39; on the keyboard and the car will drive forward. from https://github.com/martinohanlon/XboxController/blob/master/XboxController.py JOYAXISMOTION event.axis event.value 0 - x axis left thumb (+1 is right, -1 is left) 1 - y axis left thumb (+1 is down, -1 is up) 2 - x axis right thumb (+1 is right, -1 is left) 3 - y axis right thumb (+1 is down, -1 is up) 4 - right trigger 5 - left trigger JOYBUTTONDOWN | JOYBUTTONUP event.button A = 0 B = 1 X = 2 Y = 3 LB = 4 RB = 5 BACK = 6 START = 7 XBOX = 8 LEFTTHUMB = 9 RIGHTTHUMB = 10 6.2.1 Make steering proportional to remote control lever position change code from if event.axis == 0: # this is the x axis if event.value &gt; thresSteerHigh: tcpCliSock.send(&#39;right&#39;) if event.value &lt; thresSteerLow: tcpCliSock.send(&#39;left&#39;) to if event.axis == 0: # this is the x axis if event.value &gt; thresSteerHigh: tcpCliSock.send(&#39;right&#39;) angle = int(100*abs(event.value)) data = tmp1 + str(angle) print &#39;sendData = %s&#39; % data tcpCliSock.send(data) # Send the speed data to the server(Raspberry Pi) if event.value &lt; thresSteerLow: tcpCliSock.send(&#39;left&#39;) angle = int(-100*abs(event.value)) data = tmp1 + str(angle) print &#39;sendData = %s&#39; % data tcpCliSock.send(data) # Send the speed data to the server(Raspberry Pi) 6.3 Get IP adress of raspi Check in the router for the IP adress, procedure is dependent on router At shackspace go to http://leases.shack/#/ (only available from the shackspace network) and then connect via ssh pi@ipAdress 6.4 Store snapshots of video stream on local computer Donkey car stores training data on raspi SD card. In this concept the XBox controller is connected via USB to a laptop (in my case a Mac) and it makes sense to store the traing data on the laptop as well since we anyway will train the NN on that machine. The URL of the stream is: *url = “http://10.42.26.33:8080/?action=stream&quot;* for a snapshot the URL is *url = “http://10.42.26.33:8080/?action=snapshot&quot;* check video https://youtu.be/2xcUzXataIk?t=556 for a good explanation of how to receive an IP video stream. Based on that tutorial the follwing code now stores a single frame and shows that frame as well. import cv2 import numpy as np import urllib # based on example in https://www.youtube.com/watch?v=2xcUzXataIk url = &quot;http://192.168.178.67:8080/?action=snapshot&quot; imgNp = np.array(bytearray(imgResp.read()), dtype = np.uint8) img = cv2.imdecode(imgNp,-1) cv2.imshow(&quot;test&quot;,img) cv2.imwrite( &quot;Snapshot.jpg&quot;, img ); cv2.waitKey(10000) 6.4.1 Jie Hou’s alternative Jie has another solution for the same task, see https://drive.google.com/drive/folders/10U8ZTr_2HVnBWrFqvVFGO0UyQn0vCmiE The code is import cv2 import numpy as np try: from urllib.request import urlopen except ImportError: from urllib2 import urlopen print(&#39;# capture image from video #&#39;) stream = urlopen(&#39;http://192.168.0.101:8080/?action=stream&#39;) bytes = bytes() FlagSaveImage = 0 while True: bytes += stream.read(1024) a = bytes.find(b&#39;\\xff\\xd8&#39;) b = bytes.find(b&#39;\\xff\\xd9&#39;) print(&#39; #a: &#39;, a, &#39; ,b: &#39;, b) if a != -1 and b != -1: jpg = bytes[a: b + 2] bytes = bytes[b+2:] image = cv2.imdecode(np.fromstring(jpg, dtype=np.uint8), cv2.IMREAD_COLOR) cv2.imshow(&#39;image&#39;, image) if FlagSaveImage == 0: cv2.imwrite(&#39;test.jpg&#39;, image) FlagSaveImage = 1 if cv2.waitKey(1) == 27: exit(0) "],
["minutesOfMeeting.html", "Chapter 7 Minutes of meeting 7.1 21-03-2018 7.2 15-02-2018 7.3 08-02-2018", " Chapter 7 Minutes of meeting In this section short minutes of meetings are kept so that people who join later can easily get up to speed 7.1 21-03-2018 Discussing concept, elias volunteered to create block diagram Trying to get Xbox 360 controller to work with raspi and mac, failed since controller was not accessable from python eventhough it was accessable on the mac via system preference pane. 7.2 15-02-2018 7.2.1 Plattformen 7.2.1.1 Sunfounder link für amazon bestellung https://www.amazon.de/SunFounder-Roboterbausatz-Programmierbarer-Auto-Roboter-Compatible/dp/B01ANIY3EC/ref=sr_1_1?ie=UTF8&amp;qid=1518719324&amp;sr=8-1&amp;keywords=sunfounder 7.2.1.2 Basis Donkey car http://www.donkeycar.com/ http://docs.donkeycar.com/ http://docs.donkeycar.com/guide/build_hardware/ https://makezine.com/projects/build-autonomous-rc-car-raspberry-pi/ https://diyrobocars.com/ * Kinect / Wii https://sungjik.wordpress.com/2015/09/28/my_personal_robotic_companion/ Basis Carputer https://github.com/otaviogood/carputer 7.2.1.3 Openzeka https://www.youtube.com/results?search_query=openzeka 7.2.2 neuronales Netz 7.2.2.1 Hardware Nvida Jetson TX2 paralella 7.2.2.2 kontakt Slack channel: donkeycar.slack.com meetup 7.3 08-02-2018 7.3.1 Location: Shackspace What was meant to be a an introduction into the shackspace evolved to a discussion about various topics 7.3.2 Studie Hackerspaces http://www.cowerk.org/home/single/article/befragungsergebnisse-wertschoepfung-in-offenen-werkstaetten.html https://www.heise.de/make/meldung/Studie-Neue-Produktionsmodelle-in-offenen-Werkstaetten-3504625.html https://www.heise.de/make/meldung/Kein-Freifahrtschein-fuer-Hackerspaces-Benutzung-auf-eigene-Gefahr-3955181.html 7.3.3 Buchtipps Makers: Das Internet der Dinge: die nächste industrielle Revolution, Chris Anderson Zero Thinking fast and slow, Kahnemann Gunter Dueck https://www.omnisophie.com Vorträge auf der Re-publica als Einstieg https://www.youtube.com/results?search_query=gunter+dueck Biohacking: Gentechnologie für alle, Rüdiger Trojok Biohacking: Gentechnik aus der Garage, Hanno Charisius 7.3.4 RoboCar Elias says he would like to be build an autonomous model car, probably based on Raspberry Pi. In order to end dreaming and start doing we fixed the next meeting to 15th of February where we want to start defining concepts. "],
["references.html", "References", " References "],
["privacy-policy.html", "Chapter 8 Privacy Policy", " Chapter 8 Privacy Policy We are very delighted that you have shown interest in our enterprise. Data protection is of a particularly high priority for the me. The use of the Internet pages of uwe sterr is possible without any indication of personal data; however, if a data subject wants to use special enterprise services via our website, processing of personal data could become necessary. If the processing of personal data is necessary and there is no statutory basis for such processing, we generally obtain consent from the data subject. The processing of personal data, such as the name, address, e-mail address, or telephone number of a data subject shall always be in line with the General Data Protection Regulation (GDPR), and in accordance with the country-specific data protection regulations applicable to Uwe Sterr. By means of this data protection declaration, our enterprise would like to inform the general public of the nature, scope, and purpose of the personal data we collect, use and process. Furthermore, data subjects are informed, by means of this data protection declaration, of the rights to which they are entitled. As the controller, Uwe Sterr has implemented numerous technical and organizational measures to ensure the most complete protection of personal data processed through this website. However, Internet-based data transmissions may in principle have security gaps, so absolute protection may not be guaranteed. For this reason, every data subject is free to transfer personal data to us via alternative means, e.g. by telephone. Definitions The data protection declaration of Uwe Sterr is based on the terms used by the European legislator for the adoption of the General Data Protection Regulation (GDPR). Our data protection declaration should be legible and understandable for the general public, as well as our customers and business partners. To ensure this, we would like to first explain the terminology used. In this data protection declaration, we use, inter alia, the following terms: Personal data Personal data means any information relating to an identified or identifiable natural person (“data subject”). An identifiable natural person is one who can be identified, directly or indirectly, in particular by reference to an identifier such as a name, an identification number, location data, an online identifier or to one or more factors specific to the physical, physiological, genetic, mental, economic, cultural or social identity of that natural person. Data subject Data subject is any identified or identifiable natural person, whose personal data is processed by the controller responsible for the processing. Processing Processing is any operation or set of operations which is performed on personal data or on sets of personal data, whether or not by automated means, such as collection, recording, organisation, structuring, storage, adaptation or alteration, retrieval, consultation, use, disclosure by transmission, dissemination or otherwise making available, alignment or combination, restriction, erasure or destruction. Restriction of processing Restriction of processing is the marking of stored personal data with the aim of limiting their processing in the future. Profiling Profiling means any form of automated processing of personal data consisting of the use of personal data to evaluate certain personal aspects relating to a natural person, in particular to analyse or predict aspects concerning that natural person’s performance at work, economic situation, health, personal preferences, interests, reliability, behaviour, location or movements. Pseudonymisation Pseudonymisation is the processing of personal data in such a manner that the personal data can no longer be attributed to a specific data subject without the use of additional information, provided that such additional information is kept separately and is subject to technical and organisational measures to ensure that the personal data are not attributed to an identified or identifiable natural person. Controller or controller responsible for the processing Controller or controller responsible for the processing is the natural or legal person, public authority, agency or other body which, alone or jointly with others, determines the purposes and means of the processing of personal data; where the purposes and means of such processing are determined by Union or Member State law, the controller or the specific criteria for its nomination may be provided for by Union or Member State law. Processor Processor is a natural or legal person, public authority, agency or other body which processes personal data on behalf of the controller. Recipient Recipient is a natural or legal person, public authority, agency or another body, to which the personal data are disclosed, whether a third party or not. However, public authorities which may receive personal data in the framework of a particular inquiry in accordance with Union or Member State law shall not be regarded as recipients; the processing of those data by those public authorities shall be in compliance with the applicable data protection rules according to the purposes of the processing. Third party Third party is a natural or legal person, public authority, agency or body other than the data subject, controller, processor and persons who, under the direct authority of the controller or processor, are authorised to process personal data. Consent Consent of the data subject is any freely given, specific, informed and unambiguous indication of the data subject’s wishes by which he or she, by a statement or by a clear affirmative action, signifies agreement to the processing of personal data relating to him or her. Name and Address of the controller Controller for the purposes of the General Data Protection Regulation (GDPR), other data protection laws applicable in Member states of the European Union and other provisions related to data protection is: Uwe Sterr Krummenackerstr. 8 73733 Esslingen Germany Phone: +491774838931 Email: uwe.sterr@uwesterr.de Website: https://www.uwesterr.de Cookies The Internet pages of Uwe Sterr use cookies. Cookies are text files that are stored in a computer system via an Internet browser. Many Internet sites and servers use cookies. Many cookies contain a so-called cookie ID. A cookie ID is a unique identifier of the cookie. It consists of a character string through which Internet pages and servers can be assigned to the specific Internet browser in which the cookie was stored. This allows visited Internet sites and servers to differentiate the individual browser of the dats subject from other Internet browsers that contain other cookies. A specific Internet browser can be recognized and identified using the unique cookie ID. Through the use of cookies, Uwe Sterr can provide the users of this website with more user-friendly services that would not be possible without the cookie setting. By means of a cookie, the information and offers on our website can be optimized with the user in mind. Cookies allow us, as previously mentioned, to recognize our website users. The purpose of this recognition is to make it easier for users to utilize our website. The website user that uses cookies, e.g. does not have to enter access data each time the website is accessed, because this is taken over by the website, and the cookie is thus stored on the user’s computer system. Another example is the cookie of a shopping cart in an online shop. The online store remembers the articles that a customer has placed in the virtual shopping cart via a cookie. The data subject may, at any time, prevent the setting of cookies through our website by means of a corresponding setting of the Internet browser used, and may thus permanently deny the setting of cookies. Furthermore, already set cookies may be deleted at any time via an Internet browser or other software programs. This is possible in all popular Internet browsers. If the data subject deactivates the setting of cookies in the Internet browser used, not all functions of our website may be entirely usable. Collection of general data and information The website of Uwe Sterr collects a series of general data and information when a data subject or automated system calls up the website. This general data and information are stored in the server log files. Collected may be (1) the browser types and versions used, (2) the operating system used by the accessing system, (3) the website from which an accessing system reaches our website (so-called referrers), (4) the sub-websites, (5) the date and time of access to the Internet site, (6) an Internet protocol address (IP address), (7) the Internet service provider of the accessing system, and (8) any other similar data and information that may be used in the event of attacks on our information technology systems. When using these general data and information, Uwe Sterr does not draw any conclusions about the data subject. Rather, this information is needed to (1) deliver the content of our website correctly, (2) optimize the content of our website as well as its advertisement, (3) ensure the long-term viability of our information technology systems and website technology, and (4) provide law enforcement authorities with the information necessary for criminal prosecution in case of a cyber-attack. Therefore, Uwe Sterr analyzes anonymously collected data and information statistically, with the aim of increasing the data protection and data security of our enterprise, and to ensure an optimal level of protection for the personal data we process. The anonymous data of the server log files are stored separately from all personal data provided by a data subject. Routine erasure and blocking of personal data The data controller shall process and store the personal data of the data subject only for the period necessary to achieve the purpose of storage, or as far as this is granted by the European legislator or other legislators in laws or regulations to which the controller is subject to. If the storage purpose is not applicable, or if a storage period prescribed by the European legislator or another competent legislator expires, the personal data are routinely blocked or erased in accordance with legal requirements. Rights of the data subject Right of confirmation Each data subject shall have the right granted by the European legislator to obtain from the controller the confirmation as to whether or not personal data concerning him or her are being processed. If a data subject wishes to avail himself of this right of confirmation, he or she may, at any time, contact any Uwe Sterr. Right of access Each data subject shall have the right granted by the European legislator to obtain from the controller free information about his or her personal data stored at any time and a copy of this information. Furthermore, the European directives and regulations grant the data subject access to the following information: the purposes of the processing; the categories of personal data concerned; the recipients or categories of recipients to whom the personal data have been or will be disclosed, in particular recipients in third countries or international organisations; where possible, the envisaged period for which the personal data will be stored, or, if not possible, the criteria used to determine that period; the existence of the right to request from the controller rectification or erasure of personal data, or restriction of processing of personal data concerning the data subject, or to object to such processing; the existence of the right to lodge a complaint with a supervisory authority; where the personal data are not collected from the data subject, any available information as to their source; the existence of automated decision-making, including profiling, referred to in Article 22(1) and (4) of the GDPR and, at least in those cases, meaningful information about the logic involved, as well as the significance and envisaged consequences of such processing for the data subject. Furthermore, the data subject shall have a right to obtain information as to whether personal data are transferred to a third country or to an international organisation. Where this is the case, the data subject shall have the right to be informed of the appropriate safeguards relating to the transfer. If a data subject wishes to avail himself of this right of access, he or she may, at any time, contact Uwe Sterr. Right to rectification Each data subject shall have the right granted by the European legislator to obtain from the controller without undue delay the rectification of inaccurate personal data concerning him or her. Taking into account the purposes of the processing, the data subject shall have the right to have incomplete personal data completed, including by means of providing a supplementary statement. If a data subject wishes to exercise this right to rectification, he or she may, at any time, contact Uwe Sterr. Right to erasure (Right to be forgotten) Each data subject shall have the right granted by the European legislator to obtain from the controller the erasure of personal data concerning him or her without undue delay, and the controller shall have the obligation to erase personal data without undue delay where one of the following grounds applies, as long as the processing is not necessary: The personal data are no longer necessary in relation to the purposes for which they were collected or otherwise processed. The data subject withdraws consent to which the processing is based according to point (a) of Article 6(1) of the GDPR, or point (a) of Article 9(2) of the GDPR, and where there is no other legal ground for the processing. The data subject objects to the processing pursuant to Article 21(1) of the GDPR and there are no overriding legitimate grounds for the processing, or the data subject objects to the processing pursuant to Article 21(2) of the GDPR. The personal data have been unlawfully processed. The personal data must be erased for compliance with a legal obligation in Union or Member State law to which the controller is subject. The personal data have been collected in relation to the offer of information society services referred to in Article 8(1) of the GDPR. If one of the aforementioned reasons applies, and a data subject wishes to request the erasure of personal data stored by Uwe Sterr, he or she may, at any time, contact any Uwe Sterr. Uwe Sterr shall promptly ensure that the erasure request is complied with immediately. Where the controller has made personal data public and is obliged pursuant to Article 17(1) to erase the personal data, the controller, taking account of available technology and the cost of implementation, shall take reasonable steps, including technical measures, to inform other controllers processing the personal data that the data subject has requested erasure by such controllers of any links to, or copy or replication of, those personal data, as far as processing is not required. Uwe Sterr will arrange the necessary measures in individual cases. Right of restriction of processing Each data subject shall have the right granted by the European legislator to obtain from the controller restriction of processing where one of the following applies: The accuracy of the personal data is contested by the data subject, for a period enabling the controller to verify the accuracy of the personal data. The processing is unlawful and the data subject opposes the erasure of the personal data and requests instead the restriction of their use instead. The controller no longer needs the personal data for the purposes of the processing, but they are required by the data subject for the establishment, exercise or defence of legal claims. The data subject has objected to processing pursuant to Article 21(1) of the GDPR pending the verification whether the legitimate grounds of the controller override those of the data subject. If one of the aforementioned conditions is met, and a data subject wishes to request the restriction of the processing of personal data stored by Uwe Sterr, he or she may at any time contact Uwe Sterr. Uwe Sterr will arrange the restriction of the processing. Right to data portability Each data subject shall have the right granted by the European legislator, to receive the personal data concerning him or her, which was provided to a controller, in a structured, commonly used and machine-readable format. He or she shall have the right to transmit those data to another controller without hindrance from the controller to which the personal data have been provided, as long as the processing is based on consent pursuant to point (a) of Article 6(1) of the GDPR or point (a) of Article 9(2) of the GDPR, or on a contract pursuant to point (b) of Article 6(1) of the GDPR, and the processing is carried out by automated means, as long as the processing is not necessary for the performance of a task carried out in the public interest or in the exercise of official authority vested in the controller. Furthermore, in exercising his or her right to data portability pursuant to Article 20(1) of the GDPR, the data subject shall have the right to have personal data transmitted directly from one controller to another, where technically feasible and when doing so does not adversely affect the rights and freedoms of others. In order to assert the right to data portability, the data subject may at any time contact Uwe Sterr. Right to object Each data subject shall have the right granted by the European legislator to object, on grounds relating to his or her particular situation, at any time, to processing of personal data concerning him or her, which is based on point (e) or (f) of Article 6(1) of the GDPR. This also applies to profiling based on these provisions. Uwe Sterr shall no longer process the personal data in the event of the objection, unless we can demonstrate compelling legitimate grounds for the processing which override the interests, rights and freedoms of the data subject, or for the establishment, exercise or defence of legal claims. If Uwe Sterr processes personal data for direct marketing purposes, the data subject shall have the right to object at any time to processing of personal data concerning him or her for such marketing. This applies to profiling to the extent that it is related to such direct marketing. If the data subject objects to Uwe Sterr to the processing for direct marketing purposes, Uwe Sterr will no longer process the personal data for these purposes. In addition, the data subject has the right, on grounds relating to his or her particular situation, to object to processing of personal data concerning him or her by Uwe Sterr for scientific or historical research purposes, or for statistical purposes pursuant to Article 89(1) of the GDPR, unless the processing is necessary for the performance of a task carried out for reasons of public interest. In order to exercise the right to object, the data subject may contact Uwe Sterr. In addition, the data subject is free in the context of the use of information society services, and notwithstanding Directive 2002/58/EC, to use his or her right to object by automated means using technical specifications. Automated individual decision-making, including profiling Each data subject shall have the right granted by the European legislator not to be subject to a decision based solely on automated processing, including profiling, which produces legal effects concerning him or her, or similarly significantly affects him or her, as long as the decision (1) is not is necessary for entering into, or the performance of, a contract between the data subject and a data controller, or (2) is not authorised by Union or Member State law to which the controller is subject and which also lays down suitable measures to safeguard the data subject’s rights and freedoms and legitimate interests, or (3) is not based on the data subject’s explicit consent. If the decision (1) is necessary for entering into, or the performance of, a contract between the data subject and a data controller, or (2) it is based on the data subject’s explicit consent, Uwe Sterr shall implement suitable measures to safeguard the data subject’s rights and freedoms and legitimate interests, at least the right to obtain human intervention on the part of the controller, to express his or her point of view and contest the decision. If the data subject wishes to exercise the rights concerning automated individual decision-making, he or she may, at any time, contact Uwe Sterr. Right to withdraw data protection consent Each data subject shall have the right granted by the European legislator to withdraw his or her consent to processing of his or her personal data at any time. If the data subject wishes to exercise the right to withdraw the consent, he or she may, at any time, contact any Uwe Sterr. Data protection provisions about the application and use of Google Analytics (with anonymization function) On this website, the controller has integrated the component of Google Analytics (with the anonymizer function). Google Analytics is a web analytics service. Web analytics is the collection, gathering, and analysis of data about the behavior of visitors to websites. A web analysis service collects, inter alia, data about the website from which a person has come (the so-called referrer), which sub-pages were visited, or how often and for what duration a sub-page was viewed. Web analytics are mainly used for the optimization of a website and in order to carry out a cost-benefit analysis of Internet advertising. The operator of the Google Analytics component is Google Inc., 1600 Amphitheatre Pkwy, Mountain View, CA 94043-1351, United States. For the web analytics through Google Analytics the controller uses the application “_gat. _anonymizeIp“. By means of this application the IP address of the Internet connection of the data subject is abridged by Google and anonymised when accessing our websites from a Member State of the European Union or another Contracting State to the Agreement on the European Economic Area. The purpose of the Google Analytics component is to analyze the traffic on our website. Google uses the collected data and information, inter alia, to evaluate the use of our website and to provide online reports, which show the activities on our websites, and to provide other services concerning the use of our Internet site for us. Google Analytics places a cookie on the information technology system of the data subject. The definition of cookies is explained above. With the setting of the cookie, Google is enabled to analyze the use of our website. With each call-up to one of the individual pages of this Internet site, which is operated by the controller and into which a Google Analytics component was integrated, the Internet browser on the information technology system of the data subject will automatically submit data through the Google Analytics component for the purpose of online advertising and the settlement of commissions to Google. During the course of this technical procedure, the enterprise Google gains knowledge of personal information, such as the IP address of the data subject, which serves Google, inter alia, to understand the origin of visitors and clicks, and subsequently create commission settlements. The cookie is used to store personal information, such as the access time, the location from which the access was made, and the frequency of visits of our website by the data subject. With each visit to our Internet site, such personal data, including the IP address of the Internet access used by the data subject, will be transmitted to Google in the United States of America. These personal data are stored by Google in the United States of America. Google may pass these personal data collected through the technical procedure to third parties. The data subject may, as stated above, prevent the setting of cookies through our website at any time by means of a corresponding adjustment of the web browser used and thus permanently deny the setting of cookies. Such an adjustment to the Internet browser used would also prevent Google Analytics from setting a cookie on the information technology system of the data subject. In addition, cookies already in use by Google Analytics may be deleted at any time via a web browser or other software programs. In addition, the data subject has the possibility of objecting to a collection of data that are generated by Google Analytics, which is related to the use of this website, as well as the processing of this data by Google and the chance to preclude any such. For this purpose, the data subject must download a browser add-on under the link https://tools.google.com/dlpage/gaoptout and install it. This browser add-on tells Google Analytics through a JavaScript, that any data and information about the visits of Internet pages may not be transmitted to Google Analytics. The installation of the browser add-ons is considered an objection by Google. If the information technology system of the data subject is later deleted, formatted, or newly installed, then the data subject must reinstall the browser add-ons to disable Google Analytics. If the browser add-on was uninstalled by the data subject or any other person who is attributable to their sphere of competence, or is disabled, it is possible to execute the reinstallation or reactivation of the browser add-ons. Further information and the applicable data protection provisions of Google may be retrieved under https://www.google.com/intl/en/policies/privacy/ and under http://www.google.com/analytics/terms/us.html. Google Analytics is further explained under the following Link https://www.google.com/analytics/. Legal basis for the processing Art. 6(1) lit. a GDPR serves as the legal basis for processing operations for which we obtain consent for a specific processing purpose. If the processing of personal data is necessary for the performance of a contract to which the data subject is party, as is the case, for example, when processing operations are necessary for the supply of goods or to provide any other service, the processing is based on Article 6(1) lit. b GDPR. The same applies to such processing operations which are necessary for carrying out pre-contractual measures, for example in the case of inquiries concerning our products or services. Is our company subject to a legal obligation by which processing of personal data is required, such as for the fulfillment of tax obligations, the processing is based on Art. 6(1) lit. c GDPR. In rare cases, the processing of personal data may be necessary to protect the vital interests of the data subject or of another natural person. This would be the case, for example, if a visitor were injured in our company and his name, age, health insurance data or other vital information would have to be passed on to a doctor, hospital or other third party. Then the processing would be based on Art. 6(1) lit. d GDPR. Finally, processing operations could be based on Article 6(1) lit. f GDPR. This legal basis is used for processing operations which are not covered by any of the abovementioned legal grounds, if processing is necessary for the purposes of the legitimate interests pursued by our company or by a third party, except where such interests are overridden by the interests or fundamental rights and freedoms of the data subject which require protection of personal data. Such processing operations are particularly permissible because they have been specifically mentioned by the European legislator. He considered that a legitimate interest could be assumed if the data subject is a client of the controller (Recital 47 Sentence 2 GDPR). Period for which the personal data will be stored The criteria used to determine the period of storage of personal data is the respective statutory retention period. After expiration of that period, the corresponding data is routinely deleted, as long as it is no longer necessary for the fulfillment of the contract or the initiation of a contract. Provision of personal data as statutory or contractual requirement; Requirement necessary to enter into a contract; Obligation of the data subject to provide the personal data; possible consequences of failure to provide such data We clarify that the provision of personal data is partly required by law (e.g. tax regulations) or can also result from contractual provisions (e.g. information on the contractual partner). Sometimes it may be necessary to conclude a contract that the data subject provides us with personal data, which must subsequently be processed by us. The data subject is, for example, obliged to provide us with personal data when our company signs a contract with him or her. The non-provision of the personal data would have the consequence that the contract with the data subject could not be concluded. Before personal data is provided by the data subject, the data subject must contact Uwe Sterr. Uwe Sterr clarifies to the data subject whether the provision of the personal data is required by law or contract or is necessary for the conclusion of the contract, whether there is an obligation to provide the personal data and the consequences of non-provision of the personal data. Existence of automated decision-making As a responsible company, we do not use automatic decision-making or profiling. This Privacy Policy has been generated by the Privacy Policy Generator of the German Association for Data Protection that was developed in cooperation with Privacy Lawyers from WILDE BEUGER SOLMECKE, Cologne. "]
]
